--- 
# Tiny Tapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - tt_um_delta_modulation.v
    - delta.v
  top_module:  "tt_um_jmadden173_delta_modulation"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "John Madden"      # Your name
  title:        "Delta Modulation Spike Encoding"      # Project title
  language:     "Verilog" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Delta Modulation for Spiking Neural Networks (SNN) based on snnTorch's implementation."      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      A spike is generated if the difference between the current and previous data inputs is greater than a specified input threshold. The design is meant to mimic the implementation of delta modulation in the [snnTorch](https://snntorch.readthedocs.io/en/latest/snntorch.spikegen.html#snntorch.spikegen.delta) python package.

      All numerical inputs and outputs are signed 4-bit integers encoded using two's complement.

      The previous data register is made to be debug compatable with the ability to read the current value in the register and force the register to a specific value.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      After reset, the counter should increase by one every second with a 10MHz input clock.
      Experiment by changing the inputs to change the counting speed.

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:  
    - input threshold bit 0
    - input threshold bit 1
    - input threshold bit 2
    - input threshold bit 3
    - input data bit 0
    - input data bit 1
    - input data bit 2
    - input data bit 3
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - spike bit 0
    - spike bit 1
    - nc, constant output low
    - nc, constant output low
    - reg prev bit 0
    - reg prev bit 1
    - reg prev bit 2
    - reg prev bit 3
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - parameter off_spike
    - input load_prev bit
    - nc, constant output low
    - nc, constant output low
    - input force_prev bit 0
    - input force_prev bit 1
    - input force_prev bit 2
    - input force_prev bit 3

# The following fields are optional
  tag:          "snn, test"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      ""      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     10000000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
